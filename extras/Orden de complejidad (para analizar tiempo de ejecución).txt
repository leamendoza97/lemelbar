Les dejo este link, http://www.lab.dit.upm.es/~lprg/material/apuntes/o/ para cuando quieran consultar
Con mis palabras (lea) -> Es basicamente para analizar un trozo de codigo, tomarlo como una funcion, y ver de que depende la cantidad de instrucciones que va a necesitar hacer, como vimos un FOR que va desde 1 a N inclusive, es de orden N osea O(N), si en el for hay dos instrucciones , entonces por cada iteracion tenemos 2 instrucciones, por ende O(2N) en este caso, por lo general las constantes no afectan mucho al orden de una funcion por lo que no se suelen tener en cuenta, pero si tuvieramos un for dentro de otro y uno va de 1 a N y otro de uno a M entonces el orden es O(N * M), si M = N entonces O(N^2) (orden cuadrático). Como vimos la busqueda binaria es de orden logaritmico O(log N), para ordenar un arreglo de reales o enteros por ejemplo hay varios algortimos de ordenamiento, algunos de O(N) otros de O(N log N), etc.  Vean el siguiente link : 
	https://es.wikipedia.org/wiki/Algoritmo_de_ordenamiento , abajo hay una tabla, que dice COMPLEJIDAD